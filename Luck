/**
 *1、因为是执行一次再循环所以用到了do-while循环
 *2、有对比验证是否是注册的账号、密码、和卡号，用到了数组，把用户输入的信息赋给数组内
 *3、判断用户输入的是否是整型，用到了"hasNextInt"
 *4、循环打印3次和打印出5个随机数用到for循环
 *5、还有if语句和while语句镶嵌
 *6、注册、登录判断用到了布尔值
 *
 *缺点：
 *密码判断整型、非整型没有实现
 *代码过于繁琐复杂
 *
 */

package com.pzi.project;

import java.util.Scanner;

public class Lucky {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		String[] names = new String[1]; // 用于比较用户姓名是否为真
		int[] passwords = new int[1]; // 用于比较用户密码是否为真
		int[] cardNums = new int[6]; // 用于储存幸运数字

		String name; // 储存用户姓名
		int password; // 储存用户密码

		int selectNum; // 储存用户选择编号
		String end; // 储存是否继续

		int cardNum1; // 储存用户输入的卡号,判断输入的卡号是否为系统提供的随机数

		// 制造6个4位幸运数字
		for (int i = 0; i < cardNums.length; i++) {
			int max = 9999;
			int min = 1000;
			int cardNum = (int) (Math.random() * (max - min)) + min;
			cardNums[i] = cardNum;
		}

		boolean regist = false; // 判断用户是否注册了，为真则注册
		boolean entry = false; // 判断用户是否登录了，为真则登录

		// do-while 循环整个系统
		do {

			// 输入选择项
			System.out.println("*****欢迎进入奖客富翁系统*****");
			System.out.println("\t1、注册\n\t2、登录\n\t3、抽奖");
			System.out.println("**********************************");

			// 运用switch实现菜单的选择
			System.out.print("请选择菜单：");

			// 判断用户是否输入的是整型
			if (input.hasNextInt()) {
				selectNum = input.nextInt();

				// 判断输入的整型是否在选择的范围内
				while (selectNum < 0 || selectNum > 4) {
					System.out.print("很想知道您想干啥：");

					// 再次判断是否输入的是整型，是的话会进入当前的while循环
					if (input.hasNextInt()) {
						selectNum = input.nextInt();
					} else {
						break;
					}// 判断结束，不是的话则会跳出当前while循环
					/*
					 * 因为不是整型的话会直接跳到结尾，把值赋给了end
					 * 所以为了是系统看上去连贯，所以把“继续吗”加在了每个case的结尾
					 * 这样就不会出现跳到结尾时，会把“继续吗”打印出来 
					 * 而会直接把end的while循环判断结果打印出来
					 * 这里有个问题是如果输入的是“y”或“n”会直接打印出系统来或直接退出系统
					 */

				}// 判断整型范围结束

				// 进入switch
				switch (selectNum) {

				// 注册页
				case 1:
					// 用户输入信息
					System.out.println("[奖客富翁系统>注册");
					System.out.println("请填写个人注册信息：");
					System.out.print("用户名：");
					name = input.next();
					System.out.print("密码（请1-11位输入数字）：");
					password = input.nextInt();// 这个整型没有进行验证

					// 注册成功，打印出
					System.out.println("\n注册成功，请记好您的会员卡号");
					System.out.println("用户名\t\t密码\t会员卡号");
					System.out.println(name + "\t\t" + password + "\t"
							+ cardNums[0]);

					// 把用户输入的信息，赋给数组，便于使用用户输入的这些值
					names[0] = name;
					passwords[0] = password;

					// 注册成功，则把regist的值变为true，这样就判断出用户注册成功了
					regist = true;
					System.out.print("\n继续吗？(y/n)：");
					break;

				// 登录页
				case 2:

					// 判断用户是否注册了
					if (regist) {

						// 注册了进入页面
						System.out.println("[奖客富翁系统>登录");

						// 循环判断用户登录的姓名和密码是否注册过
						for (int i = 3; i > 0; i--) {

							System.out.print("请输入用户姓名：");
							name = input.next();
							System.out.print("请输入密码：");
							password = input.nextInt();

							// 判断用户名是否注册了
							if (!(name.equals(names[0]))) {
								System.out.println("用户名不存在");
								
								//避免把“0次机会”打印出来
								if(i==1){
									break;
								}
								
								System.out.println("您还有" + (i - 1) + "次机会");

								// 判断密码是否注册过
							} else if (password != passwords[0]) {
								System.out.println("密码错误");
								
								//避免把“0次机会”打印出来
								if(i==1){
									break;
								}
								
								System.out.println("您还有" + (i - 1) + "次机会");

								//账号、密码正确则登录成功
							} else if ((name.equals(names[0]))
									&& (password == passwords[0])) {
								System.out.println("欢迎您：" + names[0]);
								
								entry = true;// 登录状态改为true，说明已经登录成功
								break;
							}
							
						}//3次验证for循环结束

					} else {
						System.out.println("您还没有注册");
					}// 是否注册过，验证结束

					System.out.print("\n继续吗？(y/n)：");
					break;

				// 抽奖页
				case 3:

					// 判断是否登录过
					if (entry) {
						System.out.println("[奖客富翁系统>抽奖");

						// 三次机会判断输入的卡号是否注册过
						for (int i = 3; i > 0; i--) {
							System.out.print("请输入您的卡号：");
							cardNum1 = input.nextInt();

							// 如果是注册时的卡号则会进入判断是否是幸运客户
							if (cardNum1 == cardNums[0]) {

								// 打印出5个随机数,并判断是否与用户的卡号相等
								System.out.println("本日的幸运数字为：");
								for (int j = 1; j < cardNums.length; j++) {
									System.out.print(cardNums[j] + " ");

									// 判断卡号是否等于5个随机数中的其中一个，如果相等再跳出循环
									if (cardNums[0] == cardNums[j]) {
										System.out.println("\n恭喜您，成为今日的幸运客户！");
										break;
									} else if (j == (cardNums.length - 1)) {// 不相等时为避免重复打印
										System.out.println("\n很遗憾，您不是今日的幸运客户");
									}
								}// 判断幸运用户循环结束

							} else {// 输入的卡号不与注册的卡号相等

								// 避免“0次机会”打印出
								if (i == 0) {
									break;
								}

								System.out.print("请输入正确的考号，您还有" + (i - 1)
										+ "次机会");
							}

						}// 3次机会循环结束

					} else {// 没有登录
						System.out.println("您还没有登录！");
					}// 判断是否登录成功结束

					System.out.print("\n继续吗？(y/n)：");
					break;

				}// switch结束

			}// 第一次判断整型结束

			/*
			 * 判断整型结束，如果输入的非整型，则会把输入的值给end
			 * 这样就直接进入了end的while循环
			 * 不会再打印出“继续吗”，使系统看上去连贯，不影响其他代码
			 */

			// 输入是否继续
			end = input.next();

			// 判断输入的是不是“y”或“n”
			while ((!(end.equals("y"))) && (!(end.equals("n")))) {
				System.out.print("输入有误！继续吗？(y/n)：");
				end = input.next();
			}

			// 避免重复打印，只有当是“n”时才会打印出
			if (end.equals("n")) {
				System.out.println("系统退出，谢谢使用！");

			}

		} while (end.equals("y"));

	}
}
